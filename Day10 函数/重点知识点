一、函数基础
        python除了内置函数,还支持自定义函数,能够提高代码的利用率。
    1.函数的创建和调用
        定义函数通过del关键字实现,语法格式：
            def functionname([可选接收参数])：
                函数体内容
                return 返回语句
        函数调用,语法格式：
            funcationname([可选传入参数])
    2.形式参数与实际参数
        形式参数：定义在函数时,函数名后面括号中的参数为形式参数。
        实际参数：在调用函数时,函数名后面的参数为实际参数。
          值的传递: 进行值传递后,改变形式参数的值,实际参数的值不变。
          引用传递: 进行引用传递后,改变形式参数的值,实际参数的值也一同改变。
    3.函数的相关参数
        (a).位置参数：调用时的数量和位置必须和定义时是一样的。
        (b).关键字参数：使用形式参数的名字来确定输入的参数值。
        (c).默认参数：可以为函数的指定形式参数的默认值。
        (d).可变参数：可以向函数中传入0个或多个参数。
                *args：形式参数最后面,将参数组成元组遍历传入。
                **kwargs：形式参数最后面,将传入的元素组成字典。
    4.返回值
        函数设置返回值的作用就是将函数的处理结果返回给调用它的程序。
        当函数中没有return语句时,或者省略了return语句的参数时,将返回None,即返回空值。
    5.局部变量
        (a).局部变量：函数内部定义并使用的变量,它只在函数内部有效。
        (b).全局变量：定义在函数外的变量,在函数外和内都可以使用。
        python支持局部变量与全局变量重名,但并不推荐使用。
    6.匿名函数(lambda)
        在python中使用lambda表达式创建匿名函数,
         语法格式：result=lambda[arg1[,arg2,...,argn]:expression
         参数说明:
            result：用于调用lambda表达式。
        [arg1[,arg2,...,argn]：可选参数,用于指定要传递的参数列表,多个参数间使用逗号","分隔。
                   expression：必选参数,用于指定一个实现具体功能的表达式。
                               如果有参数,那么在该表达式中将应用这些参数。